x`name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fashion_tinder_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: backend
      run: npm ci

    - name: Lint
      working-directory: backend
      run: npm run lint

    - name: Generate Prisma Client
      working-directory: backend
      run: npx prisma generate

    - name: Run tests
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fashion_tinder_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
      run: npm test

    - name: Run E2E tests
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fashion_tinder_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
      run: npm run test:e2e