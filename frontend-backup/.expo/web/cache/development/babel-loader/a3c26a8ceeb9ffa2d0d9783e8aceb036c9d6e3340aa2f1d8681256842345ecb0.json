{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ErrorMessage(_ref) {\n  var message = _ref.message,\n    retry = _ref.retry,\n    style = _ref.style;\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(Text, {\n      style: styles.message,\n      children: message\n    }), retry && _jsx(TouchableOpacity, {\n      style: styles.retryButton,\n      onPress: retry,\n      children: _jsx(Text, {\n        style: styles.retryText,\n        children: \"Retry\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    backgroundColor: '#ffebeb',\n    borderRadius: 8,\n    marginVertical: 8\n  },\n  message: {\n    color: '#d32f2f',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  retryButton: {\n    backgroundColor: '#d32f2f',\n    padding: 8,\n    borderRadius: 4,\n    marginTop: 8,\n    alignSelf: 'center'\n  },\n  retryText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","ErrorMessage","_ref","message","retry","style","styles","container","children","retryButton","onPress","retryText","create","padding","backgroundColor","borderRadius","marginVertical","color","fontSize","textAlign","marginTop","alignSelf","fontWeight"],"sources":["E:/fashion-tinder/frontend/src/components/ErrorMessage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\ninterface ErrorMessageProps {\r\n  message: string;\r\n  retry?: () => void;\r\n  style?: any;\r\n}\r\n\r\nexport function ErrorMessage({ message, retry, style }: ErrorMessageProps) {\r\n  return (\r\n    <View style={[styles.container, style]}>\r\n      <Text style={styles.message}>{message}</Text>\r\n      {retry && (\r\n        <TouchableOpacity style={styles.retryButton} onPress={retry}>\r\n          <Text style={styles.retryText}>Retry</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    backgroundColor: '#ffebeb',\r\n    borderRadius: 8,\r\n    marginVertical: 8,\r\n  },\r\n  message: {\r\n    color: '#d32f2f',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#d32f2f',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    marginTop: 8,\r\n    alignSelf: 'center',\r\n  },\r\n  retryText: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAS1B,OAAO,SAASC,YAAYA,CAAAC,IAAA,EAA+C;EAAA,IAA5CC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAClD,OACEL,KAAA,CAACP,IAAI;IAACY,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEF,KAAK,CAAE;IAAAG,QAAA,GACrCV,IAAA,CAACJ,IAAI;MAACW,KAAK,EAAEC,MAAM,CAACH,OAAQ;MAAAK,QAAA,EAAEL;IAAO,CAAO,CAAC,EAC5CC,KAAK,IACJN,IAAA,CAACF,gBAAgB;MAACS,KAAK,EAAEC,MAAM,CAACG,WAAY;MAACC,OAAO,EAAEN,KAAM;MAAAI,QAAA,EAC1DV,IAAA,CAACJ,IAAI;QAACW,KAAK,EAAEC,MAAM,CAACK,SAAU;QAAAH,QAAA,EAAC;MAAK,CAAM;IAAC,CAC3B,CACnB;EAAA,CACG,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGX,UAAU,CAACiB,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE;EAClB,CAAC;EACDb,OAAO,EAAE;IACPc,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDV,WAAW,EAAE;IACXK,eAAe,EAAE,SAAS;IAC1BD,OAAO,EAAE,CAAC;IACVE,YAAY,EAAE,CAAC;IACfK,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACb,CAAC;EACDV,SAAS,EAAE;IACTM,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZI,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}