{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport HomeScreen from \"../screens/home/HomeScreen\";\nimport SavedItemsScreen from \"../screens/saved/SavedItemsScreen\";\nimport FriendsScreen from \"../screens/friends/FriendsScreen\";\nimport ProfileScreen from \"../screens/profile/ProfileScreen\";\nimport VoteSessionsScreen from \"../screens/votes/VoteSessionsScreen\";\nimport VoteSessionDetailsScreen from \"../screens/votes/VoteSessionDetailsScreen\";\nimport { useAuthStore } from \"../store/auth\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar VotesStack = createNativeStackNavigator();\nfunction VotesNavigator() {\n  return _jsxs(VotesStack.Navigator, {\n    children: [_jsx(VotesStack.Screen, {\n      name: \"VoteSessions\",\n      component: VoteSessionsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(VotesStack.Screen, {\n      name: \"VoteSessionDetails\",\n      component: VoteSessionDetailsScreen,\n      options: function options(_ref) {\n        var route = _ref.route;\n        return {\n          title: 'Vote Session Details',\n          headerShown: true,\n          headerBackTitle: 'Back'\n        };\n      }\n    })]\n  });\n}\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n            color = _ref3.color,\n            size = _ref3.size;\n          var iconName;\n          switch (route.name) {\n            case 'Home':\n              iconName = focused ? 'home' : 'home-outline';\n              break;\n            case 'Saved':\n              iconName = focused ? 'bookmark' : 'bookmark-outline';\n              break;\n            case 'Votes':\n              iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\n              break;\n            case 'Friends':\n              iconName = focused ? 'people' : 'people-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n            default:\n              iconName = 'help-circle';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Saved\",\n      component: SavedItemsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Votes\",\n      component: VotesNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Friends\",\n      component: FriendsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n}\nexport default function Navigation() {\n  var _useAuthStore = useAuthStore(),\n    token = _useAuthStore.token;\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: token ? _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: TabNavigator\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","LoginScreen","RegisterScreen","HomeScreen","SavedItemsScreen","FriendsScreen","ProfileScreen","VoteSessionsScreen","VoteSessionDetailsScreen","useAuthStore","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","VotesStack","VotesNavigator","Navigator","children","Screen","name","component","options","headerShown","_ref","route","title","headerBackTitle","TabNavigator","screenOptions","_ref2","tabBarIcon","_ref3","focused","color","size","iconName","Navigation","_useAuthStore","token"],"sources":["E:/fashion-tinder/frontend/src/navigation/index.tsx"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport type { ComponentProps } from 'react';\r\n\r\ntype IconName = ComponentProps<typeof Ionicons>['name'];\r\n\r\n// Screens\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport HomeScreen from '../screens/home/HomeScreen';\r\nimport SavedItemsScreen from '../screens/saved/SavedItemsScreen';\r\nimport FriendsScreen from '../screens/friends/FriendsScreen';\r\nimport ProfileScreen from '../screens/profile/ProfileScreen';\r\nimport VoteSessionsScreen from '../screens/votes/VoteSessionsScreen';\r\nimport VoteSessionDetailsScreen from '../screens/votes/VoteSessionDetailsScreen';\r\nimport { useAuthStore } from '../store/auth';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst VotesStack = createNativeStackNavigator();\r\n\r\nfunction VotesNavigator() {\r\n  return (\r\n    <VotesStack.Navigator>\r\n      <VotesStack.Screen name=\"VoteSessions\" component={VoteSessionsScreen} options={{ headerShown: false }} />\r\n      <VotesStack.Screen\r\n        name=\"VoteSessionDetails\"\r\n        component={VoteSessionDetailsScreen}\r\n        options={({ route }) => ({\r\n          title: 'Vote Session Details',\r\n          headerShown: true,\r\n          headerBackTitle: 'Back',\r\n        })}\r\n      />\r\n    </VotesStack.Navigator>\r\n  );\r\n}\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName: IconName;\r\n\r\n          switch (route.name) {\r\n            case 'Home':\r\n              iconName = focused ? 'home' : 'home-outline';\r\n              break;\r\n            case 'Saved':\r\n              iconName = focused ? 'bookmark' : 'bookmark-outline';\r\n              break;\r\n            case 'Votes':\r\n              iconName = focused ? 'checkmark-circle' : 'checkmark-circle-outline';\r\n              break;\r\n            case 'Friends':\r\n              iconName = focused ? 'people' : 'people-outline';\r\n              break;\r\n            case 'Profile':\r\n              iconName = focused ? 'person' : 'person-outline';\r\n              break;\r\n            default:\r\n              iconName = 'help-circle';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Saved\" component={SavedItemsScreen} />\r\n      <Tab.Screen name=\"Votes\" component={VotesNavigator} />\r\n      <Tab.Screen name=\"Friends\" component={FriendsScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function Navigation() {\r\n  const { token } = useAuthStore();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {token ? (\r\n          <Stack.Screen name=\"Main\" component={TabNavigator} />\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}