{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useAuthStore } from \"../../store/auth\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var register = useAuthStore(function (state) {\n    return state.register;\n  });\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield register(email, username, password);\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Create Account\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Register\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: styles.linkButton,\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Already have an account? Login\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    padding: 15,\n    marginBottom: 15,\n    borderRadius: 5\n  },\n  button: {\n    backgroundColor: '#FF3B30',\n    padding: 15,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  linkButton: {\n    marginTop: 20\n  },\n  linkText: {\n    color: '#FF3B30',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","useAuthStore","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","register","state","handleRegister","_ref2","_asyncToGenerator","error","alert","message","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","button","onPress","buttonText","goBack","linkButton","linkText","create","flex","justifyContent","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderWidth","borderColor","borderRadius","marginTop","color"],"sources":["E:/fashion-tinder/frontend/src/screens/auth/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n} from 'react-native';\r\nimport { useAuthStore } from '../../store/auth';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const register = useAuthStore((state) => state.register);\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await register(email, username, password);\r\n    } catch (error) {\r\n      Alert.alert('Error', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Create Account</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n        <Text style={styles.buttonText}>Register</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.goBack()}\r\n        style={styles.linkButton}\r\n      >\r\n        <Text style={styles.linkText}>Already have an account? Login</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#FF3B30',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  linkButton: {\r\n    marginTop: 20,\r\n  },\r\n  linkText: {\r\n    color: '#FF3B30',\r\n    textAlign: 'center',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}